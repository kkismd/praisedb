# nodeイメージをビルド
FROM node:16.6.2-alpine3.14 as node

# 軽量のAlpine Linuxベースのイメージ
FROM ruby:3.0.2-alpine3.14

# rails consoleの中で日本語入力を設定
ENV LANG C.UTF-8

# 環境構築に必要なパッケージをインストール
RUN apk add --no-cache alpine-sdk \
    mysql-client \
    mysql-dev \
    build-base \
    bash \
    tzdata \
    dpkg

RUN gem install bundler

# Dockerコンテナ起動時の実行タスクを処理するためのツール
ENV ENTRYKIT_VERSION 0.4.0

# entrykitインストール
RUN wget https://github.com/progrium/entrykit/releases/download/v${ENTRYKIT_VERSION}/entrykit_${ENTRYKIT_VERSION}_Linux_x86_64.tgz \
    && tar -xvzf entrykit_${ENTRYKIT_VERSION}_Linux_x86_64.tgz \
    && rm entrykit_${ENTRYKIT_VERSION}_Linux_x86_64.tgz \
    && mv entrykit /bin/entrykit \
    && chmod +x /bin/entrykit \
    && entrykit --symlink

# javascriptパッケージマネージャ
ENV YARN_VERSION 1.22.11

RUN wget https://github.com/yarnpkg/yarn/releases/download/v${YARN_VERSION}/yarn_${YARN_VERSION}_all.deb \
    && dpkg -i yarn_${YARN_VERSION}_all.deb

# MSBで、ビルドしたnodeイメージからnodeをコピー
COPY --from=node /usr/local/bin/node /usr/local/bin/

# dockerイメージから参照できる様シンボリックリンク作成
RUN ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
    && ln -s /opt/yarn/bin/yarnpkg /usr/local/bin/yarnpkg

# ディレクトリ作成
RUN mkdir /app

# 作業フォルダとして設定
WORKDIR /app

# ライブラリのインストールに必要なファイル群を配置
ADD Gemfile /app/Gemfile
ADD Gemfile.lock /app/Gemfile.lock
ADD package.json /app/package.json
ADD yarn.lock /app/yarn.lock
ADD webpack.config.js /app/webpack.config.js
COPY app/javascript /app/app/javascript

# コンパイルした assets を格納するディレクトリの作成
RUN mkdir -p /public/packs

# ライブラリのインストール
RUN bundle install --jobs=4
RUN yarn install

# リポジトリ全体をコピー
COPY . /app/
